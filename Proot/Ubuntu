#!/bin/env bash
# 此脚本欢迎各位脚本作者借鉴,但请勿删除作者标识
# 此脚本作者 ArcticFox Q群 705226976

black="\e[30m"
red="\033[31m"
green="\033[32m"
yellow="\033[33m"
blue="\033[34m"
purple="\033[35m"
cyan="\033[36m"
white="\033[37m"
background="\033[0m"

Linux="ubuntu"
Version="jammy"
GithubMirror="https://mirror.ghproxy.com/"

case `dpkg --print-architecture` in
aarch64)
	Arch="arm64" ;;
amd64)
	Arch="amd64" ;;
x86_64)
	Arch="amd64" ;;	
*)
	echo -e ${red}暂不支持的架构 ${cyan}$(dpkg --print-architecture)${background}
	exit
esac

FOLDER="${Linux}-${Version}"
RootfsName="rootfs-${Linux}-${Linux}.tar.xz"

TUNA_URL="https://mirrors.tuna.tsinghua.edu.cn/lxc-images/images/${Linux}/${jammy}/${Arch}/default/"
BFSU_URL="https://mirrors.bfsu.edu.cn/lxc-images/images/${Linux}/${jammy}/${Arch}/default/"
NJU_URL="https://mirror.nju.edu.cn/lxc-images/images/${Linux}/${jammy}/${Arch}/default/"

if [ -d $HOME/AF-Proot/${FOLDER} ]
then
  echo -e ${red}您已安装 ${cyan}${FOLDER}${background}
  exit
fi

pkg_install="apt install -y"
function pkg_install(){
i=0
echo -e ${yellow}安装软件 ${pkg}${background}
until ${pkg_install} ${pkg}
do
    if [ ${i} -eq 3 ]
        then
            echo -e ${red}错误次数过多 退出${background}
            exit
    fi
    i=$((${i}+1))
    echo -en ${red}命令执行失败 ${green}3秒后重试${background}
    sleep 3s
    echo
done
}
pkg_list=("tar" "xz-utils" "gzip" "pv" "wget" "curl" "pulseaudio" "proot" "git")
for package in ${pkg_list[@]}
do
  if [ -x "$(command -v apt)" ];then
    if ! dpkg -s "${package}" > /dev/null 2>&1;then
        pkg="${package} ${pkg}"
    fi
  fi
done
if [ ! -z "${pkg}" ];then
  if [ -x "$(command -v apt)" ];then
    apt update -y
    pkg_install
  fi
fi

function Download(){
file="$1"
URL="$2"
i=0
if wget --help | grep -q show-progress 
then
  echo -e ${blue}[${green}*${blue}] ${cyan}正在下载 ${yellow}${file}${cyan}${background}
  until wget -q --show-progress -O ${file} -c ${URL}
  do
    if [ ${i} == 3 ]
    then
      echo -e ${blue}[${red}*${blue}] ${cyan}错误次数过多 ${yellow}退出${background}
      return 1
    fi
    i=$((${i}+1))
    echo -e ${blue}[${red}*${blue}] ${cyan}下载失败 ${yellow}三秒后重试${background}
    sleep 3s
  done
  echo -e ${blue}[${green}*${blue}] ${cyan}下载完成.${background}
  return 0
else
  echo -e ${blue}[${green}*${blue}] ${cyan}正在下载 ${yellow}${file}${cyan}${background}
  until -O ${file} -c ${URL}
  do
    if [ ${i} == 3 ]
    then
      echo -e ${blue}[${red}*${blue}] ${cyan}错误次数过多 ${yellow}退出${background}
      return 1
    fi
    i=$((i+1))
    echo -e ${blue}[${red}*${blue}] ${cyan}下载失败 ${yellow}三秒后重试${background}
    sleep 3s
  done
  echo -e ${blue}[${green}*${blue}] ${cyan}下载完成.${background}
  return 0
fi
}

URL=(${TUNA_URL} ${BFSU_URL} ${NJU_URL})
Site=("TUNA" "BFSU" "NJU")

if [ ! -d AF-Proot/${FOLDER} ]
then
  mkdir -p $HOME/AF-Proot/${FOLDER}
fi

for Download_URL in ${URL[@]}
do
  for Download_Source in ${Site[@]}
  do
    date=$(curl ${Download_URL} | grep -oP '(?<=title=")[^"]+(?=">)' | tail -n 1)
    if Download $HOME/AF-Proot/${RootfsName} "${Download_URL}/${date}/rootfs.tar.xz"
    then
      break 2
    else
      rm $HOME/AF-Proot/${RootfsName}
      echo -e ${blue}[${yellow}*${blue}] ${red}下载出错${cyan} 更换下载源为 ${purple}${Download_Source}${cyan}${background}
      echo -e ${blue}[${green}*${blue}] ${yellow}重试中.${background}
    fi
  done
done

if [ -e $HOME/AF-Proot/rootfs-ubuntu-jammy.tar.xz ]
then
  cd $HOME/AF-Proot
  echo -e ${blue}[${green}*${blue}] 正在解压.${background}
  if ! proot --link2symlink tar -xJf $HOME/AF-Proot/${RootfsName} -C $HOME/AF-Proot/${FOLDER} | pv -s $(du -sb $HOME/AF-Proot/${RootfsName} | awk '{print $1}') | > /dev/null ||:
  then
    echo -e ${blue}[${red}*${blue}] 解压失败.${background}
    exit
  fi
else
  exit
fi

if git clone --depth=1 -b main ${GithubMirror}https://github.com/ArcticFox520/Yunzai-Bot-Script
then
  mv Yunzai-Bot-Script/Proot AF-Proot/proc
else
  echo -e ${blue}[${red}*${blue}] 文件拉取失败.${background}
  exit
fi
# 创建启动脚本
start=start-${Linux}-${Version}.sh
touch $HOME/.bashrc
sed -i "1a\$HOME/AF-Proot/$HOME/AF-Proot/start-${Linux}-${Version}.sh" .bashrc
cat > $start <<- FOX
#!/bin/bash
cd \$(dirname \$0)
pulseaudio --start
## Chroot : pulseaudio --start --system
unset LD_PRELOAD
command="proot"
command+=" --link2symlink"
command+=" -0"
command+=" -r $HOME/AF-Proot/Ubuntu-Jammy"
command+=" -b /dev"
command+=" -b /proc"
command+=" -b $HOME/AF-Proot/Ubuntu-Jammy/root:/dev/shm"
command+=" -b /sdcard:/sdcard"
command+=" -b $HOME/AF-Proot/proc/loadavg:/proc/loadavg"
command+=" -b $HOME/AF-Proot/proc/stat:/proc/stat"
command+=" -b $HOME/AF-Proot/proc/uptime:/proc/uptime"
command+=" -b $HOME/AF-Proot/proc/version:/proc/version"
command+=" -b /proc/sys/*"
command+=" -w /root"
command+=" /usr/bin/env -i"
command+=" HOME=/root"
command+=" PATH=/usr/local/sbin:/usr/local/bin:/bin:/usr/bin:/sbin:/usr/sbin:/usr/games:/usr/local/games"
command+=" TERM=\$TERM"
command+=" LANG=zh_CN.UTF-8"
command+=" /bin/bash --login"
com="\$@"
if [ -z "\$1" ];then
    exec \$command
else
    \$command -c "\$com"
fi
FOX
mv -f start-${Linux}-${Version}.sh $HOME/AF-Proot/start-${Linux}-${Version}.sh

